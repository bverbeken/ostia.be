---
layout: post
title: "Dojo"
date: 2012-10-03 13:43
comments: true
categories:
- playbe
- playframework
- dojo
published: false 
---

The Belgian Playframework User Group held it's first coding event last wednesday: a Coding Dojo.     
The ingrediÃ«nts: 17 nice people, a decent sized room, food and drinks (thank you [Cegeka](http://www.cegeka.be)!), and Playframework of course.    

A Coding Dojo is an event where people gather to code and learn together. The goal of a dojo is exactly that: to code and learn, nothing more. It's about the journey, not the destination.    
Ours was a *Randori Kata*, a kind of dojo where the whole group works together to build an application in a couple of hours. We changed the format just a wee bit, but more on that later in this post. 

<!-- more -->


The Application
----------------
The application we would build is QuickQuizz, a quiz engine for twitter. The idea is simple: Quickquizz allows quizmasters to write questions and the expected answer, Quickquizz tweets the questions on a special [@quickquizz](http://twitter.com/quickquizz) account, and people can answer these questions by replying to the tweet. Quickquizz then fetches the answers, scores them and shows an overview of all participants and their scores on a simple overview page. 

We managed to get most of this done on Wednesday, in about three hours (break & startup included). The resulting code is on github (<http://github.com/playbe/quickquizz-dojo>).     
Remember, if you decide to take a peek at the code, that it's all about the journey, not the destination :).  

The Journey
-------------
The original idea was to have two people pair programming on a laptop in front of the room, with the audience following their progress on a big screen behind them, and to switch one of the pair every ten minutes. 
But when I got to the cegeka offices in the afternoon to prepare the room, I noticed that the wireless keyboard & mous I brought actually worked from everywhere in the room, with the laptop open in front. So what we did was: instead of moving people every ten minutes, we moved the mouse and keyboard around.  

I think that was a game changer. 




Table placement
--------------------

The wireless keyboard thing worked. Also, the fact we were sitting around tables in a in a big U-shape clearly helped interaction. 

Timing: 
-----------
If you do a dojo, timing is important. A very obvious thing only occurred to me during the dojo: if you have 20 people, and each of them codes for 10 minutes, you need 200 minutes of coding time. We actually forgot to calculate this up front..  


Keyboard
-------------
In a 'normal' XXX dojo, there's two people pair programing in front of the room on a laptop, while the rest of the participants follow on the big screen. Every x minutes, one of the pairs is swapped with someone from the audience, and at the end of the evening everybody should have coded at least once. 
 
We did it slightly different. When I arrived at the Cegeka offices in the afternoon, the room was free so I put myself in a chair started hacking. I noticed that the wireless keyboard I brought actually worked if I moved to the back of the room. 

The keyboard was passed along from left to right (or right to left, depending on your viewpoint). Result was that everything became very predictable: people at the end of the U knew they wouldn't have to code before some time, and the ones who coded in the beginning of the evening quickly knew their turn had passed.    
Perhaps we need to make it a bit less predictable next time. 

When doing a dojo, make sure the first person to code knows at least a bit about the technology. It's very hard for a complete newbie to just start working

IDE war
-------
It's an eternal war, and it can't be won.
Neither 

I'm an IntelliJ fan, always been one, but I respect other people's choice (even if there really is no competition)


Do mockups
-----------
