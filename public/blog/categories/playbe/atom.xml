<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: playbe | Ostia]]></title>
  <link href="http://ostia.be/blog/categories/playbe/atom.xml" rel="self"/>
  <link href="http://ostia.be/"/>
  <updated>2013-02-27T21:51:54+01:00</updated>
  <id>http://ostia.be/</id>
  <author>
    <name><![CDATA[Ben Verbeken]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dojo]]></title>
    <link href="http://ostia.be/blog/2012/10/04/dojo/"/>
    <updated>2012-10-04T13:43:00+02:00</updated>
    <id>http://ostia.be/blog/2012/10/04/dojo</id>
    <content type="html"><![CDATA[<p>The Belgian Playframework User Group held it's first coding event last Wednesday: a Coding Dojo.   <br/>
The ingrediÃ«nts: 17 nice people, a decent sized room, food and drinks, and Playframework of course.</p>

<p>A <a href="http://www.codingdojo.org">Coding Dojo</a> is an event where people gather to code and learn together. The goal of a dojo is exactly that: to code and learn, nothing more. It's about the journey, not the destination.   <br/>
Ours was a <em>Randori Kata</em>, a kind of dojo where the whole group works together to build an application in a couple of hours, by pair programming on stage. We changed that format just a wee bit, more on that further down in this post.</p>

<!-- more -->


<h2>The Application</h2>

<p>The application we built is called QuickQuizz, a quiz engine for Twitter. The idea is simple: Quickquizz allows quizmasters to write questions and the expected answer. It tweets the questions on a special <a href="http://twitter.com/quickquizz">@quickquizz</a> account, and people can answer these questions by replying to the tweet. Quickquizz then fetches the answers (asynchronously, using <a href="http://akka.io">Akka</a>), scores them and shows an overview of all quizzers and their scores on a simple overview page.</p>

<p>We managed to get most of this done in about three hours (start up and break included). The resulting code is on github (<a href="http://github.com/playbe/quickquizz-dojo">http://github.com/playbe/quickquizz-dojo</a>).   <br/>
But please remember, if you decide to take a peek at the code, that it's all about the <em>journey</em>, not the destination :).</p>

<h2>The Journey</h2>

<p>The original idea was to have two people pair programming on a laptop in front of the room, with the audience following their progress on a big screen behind them, and to switch one of the pair every ten minutes.
But when I got to the cegeka offices in the afternoon to prepare, I noticed that the wireless keyboard and mouse I brought actually worked from everywhere in the room, with the laptop open in front. So instead of moving the participants every ten minutes, we decided to move around the mouse and keyboard.</p>

<p>That was a game changer. People did not have to get on the stage, they could literally work from within the group. The rest of us, who didn't have the keyboard, were not the <em>audience</em>, but actively participated in helping the keyboard holder.  <br/>
Also, the fact that we were sitting around tables in a big U-shape helped the interaction between the participants.</p>

<h2>Lessons Learned</h2>

<p>I think the dojo was a success. We gathered play enthusiasts, wrote some cool code, and had fun while doing that. However, there are some things I want to write down for future reference; things that can be improved.</p>

<h3>Make the coder order unpredictable</h3>

<p>The keyboard was passed along from left to right (or right to left, depending on your viewpoint). Result was that everything became quite predictable: people at the end of the U knew they wouldn't have to code before some time, and the ones who coded in the beginning of the evening knew their turn was over.  <br/>
Perhaps we need to make it a bit less predictable (randomize?) next time.</p>

<h3>The First coder</h3>

<p>We deliberately chose to start with an empty page, to show how easy it is with Play to start a new project.        <br/>
However, we should've made sure the first guy at the keyboard had already played with Play 2 before at least a bit. <code>play new quickquizz</code> is easy, but right after that, you need to start using the framework. And that's a hard thing to do if you never used it.
Btw: Sorry Tim, next time you're not the first one, I promise ;)</p>

<h3>IDE Woes</h3>

<p>I'm an IntelliJ fan, I've been one since version 5 or so. However, I respect other people's choice. Even if there really is no choice :)
The thing is, during the dojo, some people struggled with the keyboard shortcuts. We could've been avoided that by having eclipse installed and opened on the same project so that people could just alt+tab to their favorite IDE.  <br/>
In the same category: some people are used to querty, others to azerty. Perhaps a shortcut to switch keyboard layouts would've been useful.</p>

<h2>Conclusion</h2>

<p>I want to explicitly thank <a href="http://www.cegeka.be">Cegeka</a> for hosting and sponsoring this event for us. A nice atmosphere is the first requirement for a good dojo, and a nice atmosphere it was. Thanks!</p>

<p>If you have any remarks on the above, whether or not you were at the dojo, please leave a comment below, or send me a tweet. I strongly believe people learn a lot more from each other than they do from books, and holding a dojo is one of the ways to learn and have fun at the same time.</p>

<p>Also, Steve was right in his <a href="http://www.objectify.be/wordpress/?p=600">blog post</a>: Coders want to code. Which is why the Belgian Playframework User Group will be doing more code involving events in the future. Stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PlayBe Dojo: Play 2 & Java]]></title>
    <link href="http://ostia.be/blog/2012/09/18/playbe-first-dojo/"/>
    <updated>2012-09-18T23:28:00+02:00</updated>
    <id>http://ostia.be/blog/2012/09/18/playbe-first-dojo</id>
    <content type="html"><![CDATA[<p>Last year at Devoxx, I met Steve Chaloner (<a href="https://twitter.com/steve_objectify">@steve_objectify</a>), a Welsh expat in Belgium, and the first guy I met who had been using <a href="http://www.playframework.org">PlayFramework</a> professionally. Steve and his teammate managed to rewrite a struts 1 app that had been in development for some 4 years and that was ready for the bin. They used PlayFramework and rewrote the app in about a tenth of the original LOCs.  <br/>
Steve is also the author of Deadbolt, a widely used authorization module for both Play 1 and 2.</p>

<p>For those who don't know it: Play is a full-stack web framework for the JVM that was built from the ground up by web developers who were tired of the bloated enterprizeness of building web apps in java and decided to do something about it. It's got strongly typed templates, asset compilation, full statelessness, <em>real</em> hot reloading (it's stateless, duh), and it's part of the <a href="http://typesafe.com/stack">typesafe stack</a> of which <a href="http://www.theserverside.com/feature/Disruptive-forces-in-Java-Is-Scala-the-new-Spring-framework">some say</a> it's a <em>disruptive force</em>, like Spring used to be some time ago.   <br/>
But my personal favorite is this: change code - hit F5 - do a demo. <br/>
In short, it's the closest thing to PHP you can get as a java/JVM web dev, but without sacrificing your beloved strongly typed objects.</p>

<p>However, being a fanboy is not much fun if you're the only one, even if you're two.
So somewhere in spring - the season - Steve and I decided to get started with the <a href="http://www.play-be.org">Belgian Playframework User Group</a> (or <a href="https://twitter.com/#!/search/%23playbe">#playbe</a> for short). At this moment, the user group has about 30 members.</p>

<p>Now, a couple of months and beer sessions later, we're very proud to announce PlayBe's first <em>real</em> event: a <strong>Play2 Coding Dojo</strong>.  <br/>
A <a href="http://codingdojo.org">coding dojo</a> is a live coding event where everybody in the room is invited to participate. The format will be that of a <em>Randori Kata</em>, in which the group collectively builds an application, in our case using Play2 and Java.</p>

<p>What we'll be building is still a bit of a secret, but I promise it'll be something you can talk about at home, and maybe even use. <br/>
Also, did I mention that there'll be food and drinks? (Thanks <a href="http://www.cegeka.be">Cegeka</a> for the hosting &amp; sponsoring!).</p>

<p>The Dojo takes place <strong>3 October, 2012 at 7pm</strong>, at the <strong>Cegeka Offices</strong> in <strong>Leuven (Belgium)</strong>.  <br/>
No PlayFramework experience is required, the only thing you should be familiar with is a keyboard and some Java. We won't be doing <del>any</del> Scala.  <br/>
<a href="http://www.meetup.com/play-be/events/78580712/">Registration</a> is required, but free.</p>

<p>Hope to see you there!</p>
]]></content>
  </entry>
  
</feed>
